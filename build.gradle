println "Environment: ${environment}"
buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
		springCloudVersion = 'Finchley.M6'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url 'https://repo.spring.io/libs-snapshot'}
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "http://repo.spring.io/libs-snapshot-local" }
		maven { url "http://repo.spring.io/libs-milestone-local" }
		jcenter()
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath('com.diffplug.spotless:spotless-plugin-gradle:3.2.0')
		classpath('org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.4')
		classpath('com.palantir:jacoco-coverage:0.2.1')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'
apply plugin: 'docker'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.sonarqube'
apply plugin: 'com.diffplug.gradle.spotless'
apply plugin: 'jacoco'
apply plugin: 'findbugs'


group = "${groupId}"
version = "${version}"
sourceCompatibility = 1.8
targetCompatibility = 1.8

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml.html"
	}
}

tasks.withType(FindBugs) {
	maxHeapSize = '512m'
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

test {
	jacoco {
		append = false
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
	testLogging {
		exceptionFormat = 'full'
	}
}


repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url 'https://repo.spring.io/libs-snapshot'}
	maven { url "https://plugins.gradle.org/m2/" }
	mavenLocal()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
		compile('org.springframework.cloud:spring-cloud-starter-gateway')
	compile('org.springframework.cloud:spring-cloud-starter-consul-discovery')
	compile('org.springframework.cloud:spring-cloud-starter-feign:2.0.0.M2')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile ('org.springframework.cloud:spring-cloud-starter-sleuth')
	compile('org.springframework.cloud:spring-cloud-sleuth-zipkin')
	compile('org.springframework.boot:spring-boot-configuration-processor')
	compile('org.projectlombok:lombok:1.16.6')
	compile('io.reactivex:rxjava-reactive-streams:0.3.0')
	compile('org.springframework.data:spring-data-redis:2.0.2.RELEASE')
	compile('redis.clients:jedis:2.9.0')
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-archaius', version: '1.4.0.RC1'

	testCompile('org.mockito:mockito-all:1.10.19')
	testCompile('org.powermock:powermock-module-junit4:1.6.4')
	testCompile('org.powermock:powermock-api-mockito:1.6.4')
	testCompile('org.projectlombok:lombok:1.16.6')
	testCompile('org.apache.commons:commons-lang3:3.4')
	testCompile('org.slf4j:slf4j-api:1.7.12')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.M6"
	}
}


jacoco {
	toolVersion = "0.7.6.201602180812"
	reportsDir = file("$buildDir/reports/jacoco")
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14.1'
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = 'edge'
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

spotless {
	java {
		googleJavaFormat()
	}
}
